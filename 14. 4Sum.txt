14) 4Sum

class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        vector<vector<int>> ans;
        int n=nums.size();
        if(n==0){
            return ans;
        }
       
        sort(nums.begin(),nums.end());
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                int target2=target-nums[j]-nums[i];
                int l=j+1;
                int r=n-1;
                while(l<r){
                    int sum2=nums[l]+nums[r];
                    if(sum2<target2) 
                        l++;
                    else if(sum2>target2)
                        r--;
                    else{
                        vector<int>temp(4,0);
                        temp[0]=nums[i];
                        temp[1]=nums[j];
                        temp[2]=nums[l];
                        temp[3]=nums[r];
                        ans.push_back(temp);
                        while(l<r && nums[l]==temp[2]) l++;
                        while(l<r && nums[r]==temp[3]) r--;
                    }
                }
                while(j+1<n && nums[j+1]==nums[j]) j++;
            }
            while(i+1<n && nums[i+1]==nums[i]) i++;
        }
        return ans;
    }
};