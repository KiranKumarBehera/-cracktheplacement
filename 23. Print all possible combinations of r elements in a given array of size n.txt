23) Print all possible combinations of r elements in a given array of size n

 
#include<bits/stdc++.h> 
using namespace std; 

void printCombination(int arr[], int n, int r) 
{ 
	// A temporary array to store 
	// all combination one by one 
	int data[r];  
	combinationUtil(arr, data, 0, n-1, 0, r); 
} 


void combinationUtil(int arr[], int data[], 
					int start, int end, 
					int index, int r) 
{ 
	// Current combination is ready 
	// to be printed, print it 
	if (index == r) 
	{ 
		for (int j = 0; j < r; j++) 
			cout << data[j] << " "; 
		cout << endl; 
		return; 
	} 

	// replace index with all possible 
	// elements. The condition "end-i+1 >= r-index" 
	// makes sure that including one element 
	// at index will make a combination with 
	// remaining elements at remaining positions 
	for (int i = start; i <= end && 
		end - i + 1 >= r - index; i++) 
	{ 
		data[index] = arr[i]; 
		combinationUtil(arr, data, i+1, 
						end, index+1, r); 
	} 
} 

 
int main() 
{ 
	int arr[] = {1, 2, 3, 4, 5}; 
	int r = 3; 
	int n = sizeof(arr)/sizeof(arr[0]); 
	printCombination(arr, n, r); 
}